// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

// In case of the user is anmymous, we can use the following model
model User {
  id String @id @default(uuid())

  tweets Tweet[]

  Reaction Reaction[]
}

model Tweet {
  id      Int    @id @default(autoincrement())
  content String

  authorId String
  author   User   @relation(fields: [authorId], references: [id], onDelete: Cascade)

  parentId Int?
  parent   Tweet?  @relation("Replies", fields: [parentId], references: [id], onDelete: Cascade)
  replies  Tweet[] @relation("Replies")

  createdAt DateTime @default(now())

  Reaction Reaction[]
}

model Reaction {
  tweetId Int
  tweet   Tweet @relation(fields: [tweetId], references: [id], onDelete: Cascade)

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  type LikeType

  createdAt DateTime @default(now())

  @@id([tweetId, userId, type])
  @@index([tweetId, type])
}

enum LikeType {
  Grass
  Thumb
  Candy
}
